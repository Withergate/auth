buildscript {
	ext {
		springBootVersion = '2.1.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3")
	}
}

// SonarQube
plugins {
	id 'org.sonarqube' version '2.5'
}

sonarqube {
	properties {
		property 'sonar.coverage.exclusions', '**/model/*, **/*Exception.java'
	}
}

// Plugin section
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'org.asciidoctor.convert'
	
repositories {
	mavenCentral()
	jcenter()
		
	maven {
		url 'https://repo.spring.io/libs-milestone'
	}
}
	
jar {
	baseName = 'withergate-auth'
	version = '0.0.1-SNAPSHOT'
}

mainClassName = 'com.withergate.auth.AuthServer'
	
// Checkstyle
checkstyle {
	toolVersion = '8.2'
	configFile = rootProject.file('checkstyle/checkstyle.xml')

	ignoreFailures = true
	showViolations = true

	checkstyleTest.enabled = false
}

jacocoTestReport {
	reports {
		xml.enabled = true
	}
}

check.dependsOn jacocoTestReport

group = 'com.withergate'
version = '0.0.1'
sourceCompatibility = 11
targetCompatibility = 11
	
asciidoctor {
	sourceDir 'src/main/asciidoc'
	attributes \
		'snippets': file('docs/snippets')
}
	
dependencies {
	// Spring
	compile('org.springframework.boot:spring-boot-starter-tomcat')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
 	compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.5.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-mail')
	
	// Thymeleaf
	compile('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')

	// Cloud SQL
	compile('org.springframework.cloud:spring-cloud-gcp-starter-sql-mysql:1.0.0.M2')

	// Tools
	compile('org.flywaydb:flyway-core')

	// Lombok
	compileOnly('org.projectlombok:lombok')
	testCompileOnly('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')
	
	// Local development
	runtime('com.h2database:h2')
	
	// Test
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')
	testCompile('com.github.tomakehurst:wiremock-standalone:2.10.1')
}

